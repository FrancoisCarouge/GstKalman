<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GstKalman: /github/workspace/source/gstkalman.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GstKalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">GStreamer Kalman Filter Video Plugin in C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('gstkalman_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">gstkalman.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="gstkalman_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">GStreamer Kalman Filter Video Plugin in C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/GstKalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;fcarouge/kalman.hpp&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;glib-object.h&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#include &lt;gst/base/gstbasetransform.h&gt;</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &lt;gst/gst.h&gt;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &lt;scope.h&gt;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;execution&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;span&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;string_view&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml">   55</a></span><span class="keyword">namespace </span>{</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="comment">// A single precision, no input, constant system dynamic model Kalman filter.</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">   58</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">kalman</a> = fcarouge::kalman&lt;float, float&gt;;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml">   64</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml">_GstKalman</a> {</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#a0334a0be91d2e7b5c3b0bf12d3a65fc8">   66</a></span>  GstBaseTransform <a class="code hl_variable" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#a0334a0be91d2e7b5c3b0bf12d3a65fc8">element</a>;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#ab1b44cdf78e0ca9c826afff45b509181">   69</a></span>  std::vector&lt;kalman&gt; <a class="code hl_variable" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#ab1b44cdf78e0ca9c826afff45b509181">filters</a>;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#a4734b324098ab507f1aff5627da70e0d">   72</a></span>  <span class="keywordtype">float</span> <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b">p</a>{1.F};</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno"><a class="line" href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#a2254e39b5633c37042311fe707278b43">   75</a></span>  <span class="keywordtype">float</span> <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f">r</a>{0.F};</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>};</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefa98f96b1cd59fdba2ef926ba97bcf1a7a">   81</a></span><span class="keyword">enum</span> <a class="code hl_enumeration" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aef">property</a> : guint { <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefa98f96b1cd59fdba2ef926ba97bcf1a7a">_</a>, <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b">p</a>, <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f">r</a> };</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ad1951e750173d4b4cb5716bc91387632">   83</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ad1951e750173d4b4cb5716bc91387632">name</a>{<span class="stringliteral">&quot;kalman&quot;</span>};</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8bafab3df8a2e68d91568923b96e57be">   84</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8bafab3df8a2e68d91568923b96e57be">classification</a>{<span class="stringliteral">&quot;Filter/Effect/Video&quot;</span>};</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#abc2a45efd9c02b5b32e49030b97bfd03">   85</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#abc2a45efd9c02b5b32e49030b97bfd03">long_name</a>{<span class="stringliteral">&quot;Kalman Filter&quot;</span>};</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a7c3272f41e32c4920e19477f93bd6f3e">   86</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a7c3272f41e32c4920e19477f93bd6f3e">description</a>{<span class="stringliteral">&quot;A video Kalman filter plugin.&quot;</span>};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a576f016ece258ae5aa27dde32fcf454a">   87</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a576f016ece258ae5aa27dde32fcf454a">version</a>{<span class="stringliteral">&quot;0.1.0&quot;</span>};</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab8f3e6489fdc2e7650de2898781127af">   88</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab8f3e6489fdc2e7650de2898781127af">license</a>{<span class="stringliteral">&quot;Unlicense&quot;</span>};</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#aa00e04b5be93a3426cc681d74843cf6e">   89</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#aa00e04b5be93a3426cc681d74843cf6e">author</a>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="stringliteral">&quot;Francois Carouge &lt;francois.carouge@gmail.com&gt;&quot;</span>};</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a19a3044921a1d780ed647dfe4b03f881">   91</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a19a3044921a1d780ed647dfe4b03f881">origin</a>{</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="stringliteral">&quot;https://github.com/FrancoisCarouge/GstKalman&quot;</span>};</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8d7894d9aa3355d19e5c88cb983b04cf">   93</a></span><span class="keyword">constexpr</span> std::string_view <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8d7894d9aa3355d19e5c88cb983b04cf">capabilities</a>{<span class="stringliteral">&quot;video/x-raw&quot;</span>};</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="comment">// Declares the GstKalman element, a final class, part of the GStreamer module,</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="comment">// derived from the base transform element, and defines type support.</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>G_DECLARE_FINAL_TYPE(GstKalman, gst_kalman, GST, KALMAN, GstBaseTransform)</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a34f13e012528daaa546ef77e86378633">   98</a></span><a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a34f13e012528daaa546ef77e86378633">G_DEFINE_TYPE</a>(GstKalman, gst_kalman, GST_TYPE_BASE_TRANSFORM);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>auto <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a282faaab85877b074d23a1057e361d20">initialize</a>(GstPlugin *plugin) -&gt; gboolean;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2a2b863bf64abd37deb951e488c7e60">gst_kalman_set_property</a>(GObject *<span class="keywordtype">object</span>, guint prop_id,</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>                             const GValue *value, GParamSpec *pspec);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a95c3fa1bc34fd840ccaf6161049bad5a">gst_kalman_get_property</a>(GObject *<span class="keywordtype">object</span>, guint prop_id, GValue *value,</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>                             GParamSpec *pspec);</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>auto <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2d338224aa3266bd923e4124b228344">gst_kalman_transform_in_place</a>(GstBaseTransform *base, GstBuffer *output)</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    -&gt; GstFlowReturn;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="comment">// Defines and exports the entry point and metadata of the plugin.</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a4cce0c4941a0f19778ca1d812ea608b0">  109</a></span><a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a4cce0c4941a0f19778ca1d812ea608b0">GST_PLUGIN_DEFINE</a>(GST_VERSION_MAJOR, GST_VERSION_MINOR, <a class="code hl_typedef" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">kalman</a>,</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>                  <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a7c3272f41e32c4920e19477f93bd6f3e">description</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>(), <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a282faaab85877b074d23a1057e361d20">initialize</a>, <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a576f016ece258ae5aa27dde32fcf454a">version</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>(),</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>                  <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab8f3e6489fdc2e7650de2898781127af">license</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>(), <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ad1951e750173d4b4cb5716bc91387632">name</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>(), <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a19a3044921a1d780ed647dfe4b03f881">origin</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>())</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">  112</a></span>GST_ELEMENT_REGISTER_DEFINE(<a class="code hl_typedef" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">kalman</a>, <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ad1951e750173d4b4cb5716bc91387632">name</a>.<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">data</a>(), <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#adb41e2c3592c62dae8d72925131dda63">GST_RANK_NONE</a>,</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ac4e908ffaf10d9fd4d5581c3a097fa8c">  113</a></span>                            <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ac4e908ffaf10d9fd4d5581c3a097fa8c">gst_kalman_get_type</a>());</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a282faaab85877b074d23a1057e361d20">  116</a></span>auto <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a282faaab85877b074d23a1057e361d20">initialize</a>(GstPlugin *plugin) -&gt; gboolean {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <span class="keywordflow">return</span> GST_ELEMENT_REGISTER(<a class="code hl_typedef" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">kalman</a>, plugin);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>}</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a46ad1d4a4b1958355e4fd6ed7c8e2ef8">  124</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a46ad1d4a4b1958355e4fd6ed7c8e2ef8">gst_kalman_class_init</a>(GstKalmanClass *klass) {</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <span class="keyword">auto</span> *object_klass{G_OBJECT_CLASS(klass)};</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  object_klass-&gt;set_property = <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2a2b863bf64abd37deb951e488c7e60">gst_kalman_set_property</a>;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  object_klass-&gt;get_property = <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a95c3fa1bc34fd840ccaf6161049bad5a">gst_kalman_get_property</a>;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keyword">constexpr</span> GParamFlags described_readwrite{</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>      <span class="keyword">static_cast&lt;</span>GParamFlags<span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span><span class="keyword">&gt;</span>(G_PARAM_READWRITE) |</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>                               <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span><span class="keyword">&gt;</span>(G_PARAM_STATIC_STRINGS))};</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> max_float{std::numeric_limits&lt;float&gt;::max()};</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  g_object_class_install_property(</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>      object_klass, <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b">property::p</a>,</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      g_param_spec_float(<span class="stringliteral">&quot;p&quot;</span>, <span class="stringliteral">&quot;P&quot;</span>, <span class="stringliteral">&quot;Initialize estimate uncertainty.&quot;</span>, 0.,</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>                         max_float, 1., described_readwrite));</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  g_object_class_install_property(</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>      object_klass, <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f">property::r</a>,</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>      g_param_spec_float(<span class="stringliteral">&quot;r&quot;</span>, <span class="stringliteral">&quot;R&quot;</span>, <span class="stringliteral">&quot;Initialize output uncertainty.&quot;</span>, 0.,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>                         max_float, 0., described_readwrite));</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">auto</span> *gstelement_klass{GST_ELEMENT_CLASS(klass)};</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  gst_element_class_set_static_metadata(gstelement_klass, <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#abc2a45efd9c02b5b32e49030b97bfd03">long_name</a>.data(),</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                                        <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8bafab3df8a2e68d91568923b96e57be">classification</a>.data(),</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>                                        <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a7c3272f41e32c4920e19477f93bd6f3e">description</a>.data(), <a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#aa00e04b5be93a3426cc681d74843cf6e">author</a>.data());</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  GstStaticPadTemplate sink_template{<span class="stringliteral">&quot;sink&quot;</span>, GstPadDirection::GST_PAD_SINK,</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>                                     GstPadPresence::GST_PAD_ALWAYS,</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>                                     GST_STATIC_CAPS(<a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8d7894d9aa3355d19e5c88cb983b04cf">capabilities</a>.data())};</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  gst_element_class_add_pad_template(</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>      gstelement_klass, gst_static_pad_template_get(&amp;sink_template));</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  GstStaticPadTemplate source_template{<span class="stringliteral">&quot;src&quot;</span>, GstPadDirection::GST_PAD_SRC,</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>                                       GstPadPresence::GST_PAD_ALWAYS,</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>                                       GST_STATIC_CAPS(<a class="code hl_variable" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8d7894d9aa3355d19e5c88cb983b04cf">capabilities</a>.data())};</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  gst_element_class_add_pad_template(</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      gstelement_klass, gst_static_pad_template_get(&amp;source_template));</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  GST_BASE_TRANSFORM_CLASS(klass)-&gt;transform_ip =</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      GST_DEBUG_FUNCPTR(<a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2d338224aa3266bd923e4124b228344">gst_kalman_transform_in_place</a>);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>}</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2a2b863bf64abd37deb951e488c7e60">  164</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2a2b863bf64abd37deb951e488c7e60">gst_kalman_set_property</a>(GObject *<span class="keywordtype">object</span>, guint prop_id,</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>                             <span class="keyword">const</span> GValue *value, GParamSpec *pspec) {</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(pspec);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keywordflow">switch</span> (<span class="keyword">auto</span> *element{GST_KALMAN(<span class="keywordtype">object</span>)}; prop_id) {</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b">property::p</a>:</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    element-&gt;p = g_value_get_float(value);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f">property::r</a>:</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    element-&gt;r = g_value_get_float(value);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordflow">default</span>:</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    G_OBJECT_WARN_INVALID_PROPERTY_ID(<span class="keywordtype">object</span>, prop_id, pspec);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  }</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>}</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a95c3fa1bc34fd840ccaf6161049bad5a">  184</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a95c3fa1bc34fd840ccaf6161049bad5a">gst_kalman_get_property</a>(GObject *<span class="keywordtype">object</span>, guint prop_id, GValue *value,</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>                             GParamSpec *pspec) {</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(object);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(prop_id);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(value);</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(pspec);</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>}</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a878ebad5cd43ebe07593d3c3a5781061">  195</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a878ebad5cd43ebe07593d3c3a5781061">gst_kalman_init</a>(GstKalman *element) { <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(element); }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno"><a class="line" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2d338224aa3266bd923e4124b228344">  201</a></span><span class="keyword">auto</span> <a class="code hl_function" href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2d338224aa3266bd923e4124b228344">gst_kalman_transform_in_place</a>(GstBaseTransform *element_base,</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>                                   GstBuffer *output) -&gt; GstFlowReturn {</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keywordflow">if</span> (GST_CLOCK_TIME_IS_VALID(GST_BUFFER_TIMESTAMP(output))) {</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>    gst_object_sync_values(GST_OBJECT(element_base),</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>                           GST_BUFFER_TIMESTAMP(output));</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  }</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keyword">const</span> sr::unique_resource source_capabilities{</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>      gst_pad_get_current_caps(element_base-&gt;srcpad), gst_caps_unref};</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  g_return_val_if_fail(source_capabilities.get(), GST_FLOW_ERROR);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  <span class="keyword">const</span> <span class="keyword">auto</span> *source_data{gst_caps_get_structure(source_capabilities.get(), 0)};</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  g_return_val_if_fail(source_data, GST_FLOW_ERROR);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  gint width{0};</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  g_return_val_if_fail(gst_structure_get_int(source_data, <span class="stringliteral">&quot;width&quot;</span>, &amp;width),</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>                       GST_FLOW_ERROR);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  gint height{0};</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  g_return_val_if_fail(gst_structure_get_int(source_data, <span class="stringliteral">&quot;height&quot;</span>, &amp;height),</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>                       GST_FLOW_ERROR);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <span class="keyword">auto</span> *element{GST_KALMAN(element_base)};</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keyword">auto</span> &amp;filters{element-&gt;filters};</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keyword">const</span> std::size_t resolution{<span class="keyword">static_cast&lt;</span>std::size_t<span class="keyword">&gt;</span>(width * height)};</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  GstMapInfo map;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keyword">const</span> sr::unique_resource mapping{</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>      gst_buffer_map(output, &amp;map, GST_MAP_READWRITE),</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>      [&amp;map, &amp;output](gboolean status) {</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(status);</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>        gst_buffer_unmap(output, &amp;map);</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>      }};</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  <span class="keyword">const</span> std::span pixels{map.data, resolution};</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  <span class="keywordflow">if</span> (resolution != filters.size()) {</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    filters = std::vector&lt;kalman&gt;{resolution};</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    std::transform(std::execution::par_unseq, std::begin(pixels),</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>                   std::end(pixels), std::begin(filters), std::begin(pixels),</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>                   [element](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;pixel, <span class="keyword">auto</span> &amp;filter) {</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>                     filter.x(pixel);</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>                     filter.p(element-&gt;p);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>                     filter.r(element-&gt;r);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>                     <span class="keywordflow">return</span> pixel;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>                   });</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    std::transform(std::execution::par_unseq, std::begin(pixels),</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>                   std::end(pixels), std::begin(filters), std::begin(pixels),</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>                   []&lt;<span class="keyword">typename</span> Pixel&gt;(<span class="keyword">const</span> Pixel &amp;pixel, <span class="keyword">auto</span> &amp;filter) {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>                     filter.update(pixel);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>                     <span class="keyword">using </span>limit = std::numeric_limits&lt;Pixel&gt;;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>                     <span class="keywordflow">return</span> std::clamp&lt;Pixel&gt;(filter.x(), limit::min(),</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>                                              limit::max());</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>                   });</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  }</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  <span class="keywordflow">return</span> GST_FLOW_OK;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>}</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>} <span class="comment">// namespace</span></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a19a3044921a1d780ed647dfe4b03f881"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a19a3044921a1d780ed647dfe4b03f881">anonymous_namespace{gstkalman.cpp}::origin</a></div><div class="ttdeci">constexpr std::string_view origin</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00091">gstkalman.cpp:91</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a282faaab85877b074d23a1057e361d20"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a282faaab85877b074d23a1057e361d20">anonymous_namespace{gstkalman.cpp}::initialize</a></div><div class="ttdeci">auto initialize(GstPlugin *plugin) -&gt; gboolean</div><div class="ttdoc">Registers the plugin element.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00116">gstkalman.cpp:116</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a29bac156c28c7613bee4b9a434ce5aef"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aef">anonymous_namespace{gstkalman.cpp}::property</a></div><div class="ttdeci">property</div><div class="ttdoc">The GStreamer Kalman filter element properties.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00081">gstkalman.cpp:81</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a29bac156c28c7613bee4b9a434ce5aefa98f96b1cd59fdba2ef926ba97bcf1a7a"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefa98f96b1cd59fdba2ef926ba97bcf1a7a">anonymous_namespace{gstkalman.cpp}::_</a></div><div class="ttdeci">@ _</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00081">gstkalman.cpp:81</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefaa0b7a9e5147368162297e315efc1657f">anonymous_namespace{gstkalman.cpp}::r</a></div><div class="ttdeci">@ r</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00081">gstkalman.cpp:81</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a29bac156c28c7613bee4b9a434ce5aefafd1688c9f310fa3e143846ff7e8fdd1b">anonymous_namespace{gstkalman.cpp}::p</a></div><div class="ttdeci">@ p</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00081">gstkalman.cpp:81</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a34f13e012528daaa546ef77e86378633"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a34f13e012528daaa546ef77e86378633">anonymous_namespace{gstkalman.cpp}::G_DEFINE_TYPE</a></div><div class="ttdeci">G_DEFINE_TYPE(GstKalman, gst_kalman, GST_TYPE_BASE_TRANSFORM)</div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a46ad1d4a4b1958355e4fd6ed7c8e2ef8"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a46ad1d4a4b1958355e4fd6ed7c8e2ef8">anonymous_namespace{gstkalman.cpp}::gst_kalman_class_init</a></div><div class="ttdeci">void gst_kalman_class_init(GstKalmanClass *klass)</div><div class="ttdoc">Defines the element details.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00124">gstkalman.cpp:124</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a4cce0c4941a0f19778ca1d812ea608b0"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a4cce0c4941a0f19778ca1d812ea608b0">anonymous_namespace{gstkalman.cpp}::GST_PLUGIN_DEFINE</a></div><div class="ttdeci">GST_PLUGIN_DEFINE(GST_VERSION_MAJOR, GST_VERSION_MINOR, kalman, description.data(), initialize, version.data(), license.data(), name.data(), origin.data()) GST_ELEMENT_REGISTER_DEFINE(kalman</div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a576f016ece258ae5aa27dde32fcf454a"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a576f016ece258ae5aa27dde32fcf454a">anonymous_namespace{gstkalman.cpp}::version</a></div><div class="ttdeci">constexpr std::string_view version</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00087">gstkalman.cpp:87</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a7c3272f41e32c4920e19477f93bd6f3e"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a7c3272f41e32c4920e19477f93bd6f3e">anonymous_namespace{gstkalman.cpp}::description</a></div><div class="ttdeci">constexpr std::string_view description</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00086">gstkalman.cpp:86</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a878ebad5cd43ebe07593d3c3a5781061"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a878ebad5cd43ebe07593d3c3a5781061">anonymous_namespace{gstkalman.cpp}::gst_kalman_init</a></div><div class="ttdeci">void gst_kalman_init(GstKalman *element)</div><div class="ttdoc">Instantiates the element.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00195">gstkalman.cpp:195</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a8bafab3df8a2e68d91568923b96e57be"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8bafab3df8a2e68d91568923b96e57be">anonymous_namespace{gstkalman.cpp}::classification</a></div><div class="ttdeci">constexpr std::string_view classification</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00084">gstkalman.cpp:84</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a8d7894d9aa3355d19e5c88cb983b04cf"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a8d7894d9aa3355d19e5c88cb983b04cf">anonymous_namespace{gstkalman.cpp}::capabilities</a></div><div class="ttdeci">constexpr std::string_view capabilities</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00093">gstkalman.cpp:93</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_a95c3fa1bc34fd840ccaf6161049bad5a"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#a95c3fa1bc34fd840ccaf6161049bad5a">anonymous_namespace{gstkalman.cpp}::gst_kalman_get_property</a></div><div class="ttdeci">void gst_kalman_get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)</div><div class="ttdoc">Provides the element instance data on property request.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00184">gstkalman.cpp:184</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_aa00e04b5be93a3426cc681d74843cf6e"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#aa00e04b5be93a3426cc681d74843cf6e">anonymous_namespace{gstkalman.cpp}::author</a></div><div class="ttdeci">constexpr std::string_view author</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00089">gstkalman.cpp:89</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ab2a2b863bf64abd37deb951e488c7e60"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2a2b863bf64abd37deb951e488c7e60">anonymous_namespace{gstkalman.cpp}::gst_kalman_set_property</a></div><div class="ttdeci">void gst_kalman_set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)</div><div class="ttdoc">Update the element instance data on property change.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00164">gstkalman.cpp:164</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ab2d338224aa3266bd923e4124b228344"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab2d338224aa3266bd923e4124b228344">anonymous_namespace{gstkalman.cpp}::gst_kalman_transform_in_place</a></div><div class="ttdeci">auto gst_kalman_transform_in_place(GstBaseTransform *base, GstBuffer *output) -&gt; GstFlowReturn</div><div class="ttdoc">Processes the data buffer in-place.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00201">gstkalman.cpp:201</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ab51f675c361d36c316eca7e9f114250e"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab51f675c361d36c316eca7e9f114250e">anonymous_namespace{gstkalman.cpp}::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; float, float &gt; kalman</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00058">gstkalman.cpp:58</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ab8f3e6489fdc2e7650de2898781127af"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ab8f3e6489fdc2e7650de2898781127af">anonymous_namespace{gstkalman.cpp}::license</a></div><div class="ttdeci">constexpr std::string_view license</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00088">gstkalman.cpp:88</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_abc2a45efd9c02b5b32e49030b97bfd03"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#abc2a45efd9c02b5b32e49030b97bfd03">anonymous_namespace{gstkalman.cpp}::long_name</a></div><div class="ttdeci">constexpr std::string_view long_name</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00085">gstkalman.cpp:85</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ac4e908ffaf10d9fd4d5581c3a097fa8c"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ac4e908ffaf10d9fd4d5581c3a097fa8c">anonymous_namespace{gstkalman.cpp}::gst_kalman_get_type</a></div><div class="ttdeci">name gst_kalman_get_type())</div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ad1951e750173d4b4cb5716bc91387632"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ad1951e750173d4b4cb5716bc91387632">anonymous_namespace{gstkalman.cpp}::name</a></div><div class="ttdeci">constexpr std::string_view name</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00083">gstkalman.cpp:83</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_adb41e2c3592c62dae8d72925131dda63"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#adb41e2c3592c62dae8d72925131dda63">anonymous_namespace{gstkalman.cpp}::GST_RANK_NONE</a></div><div class="ttdeci">name GST_RANK_NONE</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00112">gstkalman.cpp:112</a></div></div>
<div class="ttc" id="anamespaceanonymous__namespace_02gstkalman_8cpp_03_xhtml_ae3f768d24a8ae50905560e110bfb4867"><div class="ttname"><a href="namespaceanonymous__namespace_02gstkalman_8cpp_03.xhtml#ae3f768d24a8ae50905560e110bfb4867">anonymous_namespace{gstkalman.cpp}::data</a></div><div class="ttdeci">name data()</div></div>
<div class="ttc" id="astructanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman_xhtml"><div class="ttname"><a href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml">anonymous_namespace{gstkalman.cpp}::_GstKalman</a></div><div class="ttdoc">The GStreamer Kalman filter video plugin element datastructure.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00064">gstkalman.cpp:64</a></div></div>
<div class="ttc" id="astructanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman_xhtml_a0334a0be91d2e7b5c3b0bf12d3a65fc8"><div class="ttname"><a href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#a0334a0be91d2e7b5c3b0bf12d3a65fc8">anonymous_namespace{gstkalman.cpp}::_GstKalman::element</a></div><div class="ttdeci">GstBaseTransform element</div><div class="ttdoc">The transform base class providing default support.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00066">gstkalman.cpp:66</a></div></div>
<div class="ttc" id="astructanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman_xhtml_ab1b44cdf78e0ca9c826afff45b509181"><div class="ttname"><a href="structanonymous__namespace_02gstkalman_8cpp_03_1_1___gst_kalman.xhtml#ab1b44cdf78e0ca9c826afff45b509181">anonymous_namespace{gstkalman.cpp}::_GstKalman::filters</a></div><div class="ttdeci">std::vector&lt; kalman &gt; filters</div><div class="ttdoc">A Kalman filter for each pixel of the frame.</div><div class="ttdef"><b>Definition:</b> <a href="gstkalman_8cpp_source.xhtml#l00069">gstkalman.cpp:69</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b2f33c71d4aa5e7af42a1ca61ff5af1b.xhtml">source</a></li><li class="navelem"><a class="el" href="gstkalman_8cpp.xhtml">gstkalman.cpp</a></li>
    <li class="footer">Generated on Thu Jan 5 2023 03:08:07 for GstKalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
