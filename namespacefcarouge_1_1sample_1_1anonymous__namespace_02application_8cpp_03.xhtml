<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GstKalman: fcarouge::sample::anonymous_namespace{application.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GstKalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">GStreamer Kalman Filter Video Plugin in C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::sample::anonymous_namespace{application.cpp} Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:abb1e2265da72f61970789a5e43e4a59c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#abb1e2265da72f61970789a5e43e4a59c">link_pad_callback</a> (GstElement *source, GstPad *pad, GstElement *sink)</td></tr>
<tr class="memdesc:abb1e2265da72f61970789a5e43e4a59c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signal callback to link raw video pad to sink.  <a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#abb1e2265da72f61970789a5e43e4a59c">More...</a><br /></td></tr>
<tr class="separator:abb1e2265da72f61970789a5e43e4a59c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e4b87365fcbbbe3697ccdfa16dfa550"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a6e4b87365fcbbbe3697ccdfa16dfa550">quit_callback</a> (auto bus, auto message, auto loop) -&gt; gboolean</td></tr>
<tr class="memdesc:a6e4b87365fcbbbe3697ccdfa16dfa550"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bus watch callback to quit execution context on media stop.  <a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a6e4b87365fcbbbe3697ccdfa16dfa550">More...</a><br /></td></tr>
<tr class="separator:a6e4b87365fcbbbe3697ccdfa16dfa550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5558ba9a57aa74f9a6029684b70b7cbb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a5558ba9a57aa74f9a6029684b70b7cbb">gst_pipeline_destroy</a> (GstElement *pipeline)</td></tr>
<tr class="memdesc:a5558ba9a57aa74f9a6029684b70b7cbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pipeline cleanup scope deleter.  <a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a5558ba9a57aa74f9a6029684b70b7cbb">More...</a><br /></td></tr>
<tr class="separator:a5558ba9a57aa74f9a6029684b70b7cbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a9f601425e3e0128f32d14de6781387c1"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a9f601425e3e0128f32d14de6781387c1">application</a></td></tr>
<tr class="memdesc:a9f601425e3e0128f32d14de6781387c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application example demonstrating usage of the Kalman element.  <a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml#a9f601425e3e0128f32d14de6781387c1">More...</a><br /></td></tr>
<tr class="separator:a9f601425e3e0128f32d14de6781387c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a5558ba9a57aa74f9a6029684b70b7cbb" name="a5558ba9a57aa74f9a6029684b70b7cbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5558ba9a57aa74f9a6029684b70b7cbb">&#9670;&nbsp;</a></span>gst_pipeline_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::sample::anonymous_namespace{application.cpp}::gst_pipeline_destroy </td>
          <td>(</td>
          <td class="paramtype">GstElement *&#160;</td>
          <td class="paramname"><em>pipeline</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pipeline cleanup scope deleter. </p>

<p class="definition">Definition at line <a class="el" href="application_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="application_8cpp_source.xhtml">application.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  178</span>                                                {</div>
<div class="line"><span class="lineno">  179</span>  <span class="comment">// Clean stop the pipeline before destrution.</span></div>
<div class="line"><span class="lineno">  180</span>  <span class="keyword">const</span> GstStateChangeReturn state_changed{</div>
<div class="line"><span class="lineno">  181</span>      gst_element_set_state(pipeline, GST_STATE_NULL)};</div>
<div class="line"><span class="lineno">  182</span>  assert(state_changed != GST_STATE_CHANGE_FAILURE &amp;&amp;</div>
<div class="line"><span class="lineno">  183</span>         <span class="stringliteral">&quot;Failed to clear the pipeline.&quot;</span>);</div>
<div class="line"><span class="lineno">  184</span>  gst_object_unref(pipeline);</div>
<div class="line"><span class="lineno">  185</span>};</div>
</div><!-- fragment -->
</div>
</div>
<a id="abb1e2265da72f61970789a5e43e4a59c" name="abb1e2265da72f61970789a5e43e4a59c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb1e2265da72f61970789a5e43e4a59c">&#9670;&nbsp;</a></span>link_pad_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::sample::anonymous_namespace{application.cpp}::link_pad_callback </td>
          <td>(</td>
          <td class="paramtype">GstElement *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GstPad *&#160;</td>
          <td class="paramname"><em>pad</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GstElement *&#160;</td>
          <td class="paramname"><em>sink</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Signal callback to link raw video pad to sink. </p>

<p class="definition">Definition at line <a class="el" href="application_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="application_8cpp_source.xhtml">application.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  133</span>                                                                          {</div>
<div class="line"><span class="lineno">  134</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(source);</div>
<div class="line"><span class="lineno">  135</span> </div>
<div class="line"><span class="lineno">  136</span>  <span class="comment">// Obtain the media capabilities of the pad.</span></div>
<div class="line"><span class="lineno">  137</span>  <span class="keyword">const</span> sr::unique_resource pad_capabilities{gst_pad_get_current_caps(pad),</div>
<div class="line"><span class="lineno">  138</span>                                             gst_caps_unref};</div>
<div class="line"><span class="lineno">  139</span>  assert(pad_capabilities.get() &amp;&amp; <span class="stringliteral">&quot;Failed to obtain the pad&#39;s capabilities.&quot;</span>);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>  <span class="comment">// Obtain the capabilities data.</span></div>
<div class="line"><span class="lineno">  142</span>  <span class="keyword">const</span> <span class="keyword">auto</span> *capabilities_data{</div>
<div class="line"><span class="lineno">  143</span>      gst_caps_get_structure(pad_capabilities.get(), 0)};</div>
<div class="line"><span class="lineno">  144</span>  assert(capabilities_data &amp;&amp; <span class="stringliteral">&quot;Failed to obtain the pad&#39;s capabilities data.&quot;</span>);</div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>  <span class="comment">// View the name of the capabilities.</span></div>
<div class="line"><span class="lineno">  147</span>  <span class="keyword">const</span> std::string_view capabilities_name{</div>
<div class="line"><span class="lineno">  148</span>      gst_structure_get_name(capabilities_data)};</div>
<div class="line"><span class="lineno">  149</span>  assert(!capabilities_name.empty() &amp;&amp; <span class="stringliteral">&quot;Failed to obtain the pad&#39;s type.&quot;</span>);</div>
<div class="line"><span class="lineno">  150</span> </div>
<div class="line"><span class="lineno">  151</span>  <span class="comment">// Ignore all pads but the one offering raw video support.</span></div>
<div class="line"><span class="lineno">  152</span>  <span class="keywordflow">if</span> (!capabilities_name.starts_with(<span class="stringliteral">&quot;video/x-raw&quot;</span>)) {</div>
<div class="line"><span class="lineno">  153</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  154</span>  }</div>
<div class="line"><span class="lineno">  155</span> </div>
<div class="line"><span class="lineno">  156</span>  <span class="comment">// Obtain the existing pad of the sink element.</span></div>
<div class="line"><span class="lineno">  157</span>  <span class="keyword">const</span> sr::unique_resource sink_pad{gst_element_get_static_pad(sink, <span class="stringliteral">&quot;sink&quot;</span>),</div>
<div class="line"><span class="lineno">  158</span>                                     gst_object_unref};</div>
<div class="line"><span class="lineno">  159</span>  assert(sink_pad.get() &amp;&amp; <span class="stringliteral">&quot;Failed to obtain the sink pad.&quot;</span>);</div>
<div class="line"><span class="lineno">  160</span> </div>
<div class="line"><span class="lineno">  161</span>  <span class="comment">// Link the source and sink pads together.</span></div>
<div class="line"><span class="lineno">  162</span>  <span class="keyword">const</span> GstPadLinkReturn link_status{gst_pad_link(pad, sink_pad.get())};</div>
<div class="line"><span class="lineno">  163</span>  assert(link_status == GST_PAD_LINK_OK &amp;&amp; <span class="stringliteral">&quot;Failed to link the sink pad.&quot;</span>);</div>
<div class="line"><span class="lineno">  164</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6e4b87365fcbbbe3697ccdfa16dfa550" name="a6e4b87365fcbbbe3697ccdfa16dfa550"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e4b87365fcbbbe3697ccdfa16dfa550">&#9670;&nbsp;</a></span>quit_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::sample::anonymous_namespace{application.cpp}::quit_callback </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>bus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>loop</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; gboolean</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bus watch callback to quit execution context on media stop. </p>

<p class="definition">Definition at line <a class="el" href="application_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="application_8cpp_source.xhtml">application.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  166</span>                                                                  {</div>
<div class="line"><span class="lineno">  167</span>  <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(bus);</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>  <span class="comment">// Stop the execution context if the media ended or errored.</span></div>
<div class="line"><span class="lineno">  170</span>  <span class="keywordflow">if</span> (<span class="keyword">const</span> GstMessageType message_type{GST_MESSAGE_TYPE(message)};</div>
<div class="line"><span class="lineno">  171</span>      message_type == GST_MESSAGE_EOS || message_type == GST_MESSAGE_ERROR) {</div>
<div class="line"><span class="lineno">  172</span>    g_main_loop_quit(<span class="keyword">static_cast&lt;</span>GMainLoop *<span class="keyword">&gt;</span>(loop));</div>
<div class="line"><span class="lineno">  173</span>  }</div>
<div class="line"><span class="lineno">  174</span> </div>
<div class="line"><span class="lineno">  175</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  176</span>}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a9f601425e3e0128f32d14de6781387c1" name="a9f601425e3e0128f32d14de6781387c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f601425e3e0128f32d14de6781387c1">&#9670;&nbsp;</a></span>application</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const auto fcarouge::sample::anonymous_namespace{application.cpp}::application</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application example demonstrating usage of the Kalman element. </p>
<p >Demonstrates a GStreamer application. Sets up a media pipeline. Plays a file from a URI. Converts the media to raw video. Filters the frames with a Kalman filter. Plays the video filtered video out. Also sets up a bus watch and pad linking callbacks in support of the pipeline. </p>

<p class="definition">Definition at line <a class="el" href="application_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="application_8cpp_source.xhtml">application.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample.xhtml">sample</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02application_8cpp_03.xhtml">anonymous_namespace{application.cpp}</a></li>
    <li class="footer">Generated on Sun Jan 1 2023 05:00:39 for GstKalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
